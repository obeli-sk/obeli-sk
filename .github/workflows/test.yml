name: test
permissions:
  contents: read
# This configuration allows maintainers of this repo to create a branch and pull request based on
# the new branch. Restricting the push trigger to the main branch ensures that the PR only gets
# built once.
on:
  push:
    branches:
      - main
  pull_request:
# If new code is pushed to a PR branch, then cancel in progress workflows for that PR.

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  test-nosim:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
      - name: Restore nix cache
        id: target-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            /nix/store/
          key: nixstore-${{ runner.os }}-${{ hashFiles('flake.lock') }}
      - name: Load nix store
        run: nix develop --command echo
      - name: cargo test (nosim)
        run: nix develop --command cargo nextest run --profile ci-nosim --no-capture --filter-expr '!test(/perf/)'
        env:
          RUSTFLAGS: "--cfg tokio_unstable --cfg tracing_unstable"
          RUST_LOG: "info,executor=trace,wasm_workers=trace,db=info"
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/nextest/junit-*.xml
      - name: Save nix store cache
        id: target-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            /nix/store/
          key: nixstore-${{ runner.os }}-${{ hashFiles('flake.lock') }}
  test-madsim:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
      - name: Load nix store
        run: nix develop --command echo
      - name: Restore rust cache
        id: target-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: rust-madsim-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
      - name: cargo test (madsim)
        run: nix develop --command cargo nextest run --profile ci-madsim --no-capture --filter-expr '!test(/perf/)'
        env:
          RUSTFLAGS: "--cfg madsim --cfg tokio_unstable --cfg tracing_unstable"
          RUST_LOG: "info,executor=trace,wasm_workers=trace,db=info"
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/nextest/junit-*.xml
      - name: Save rust cache
        id: target-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: rust-madsim-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
