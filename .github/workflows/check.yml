name: check
permissions:
  contents: read
# This configuration allows maintainers of this repo to create a branch and pull request based on
# the new branch. Restricting the push trigger to the main branch ensures that the PR only gets
# built once.
on:
  push:
    branches:
      - main
  pull_request:
# If new code is pushed to a PR branch, then cancel in progress workflows for that PR.

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  fmt:
    name: stable / fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
      - name: Load nix store
        run: nix develop --command echo
      - name: cargo fmt
        run: nix develop --command cargo fmt --check
  clippy-nosim:
    name: clippy - nosim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
      - name: Load nix store
        run: nix develop --command echo
      - name: Restore rust cache
        id: target-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
      - name: cargo clippy (nosim)
        run: nix develop --command cargo clippy --all-targets -- -D warnings
        env:
          RUSTFLAGS: "--cfg tracing_unstable"
      - name: Save rust cache
        id: target-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
  clippy-madsim:
    name: clippy - madsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v26
        with:
          extra_nix_config: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"
      - name: Load nix store
        run: nix develop --command echo
      - name: Restore rust cache
        id: target-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
      - name: cargo clippy (madsim)
        run: nix develop --command cargo clippy --all-targets -- -D warnings
        env:
          RUSTFLAGS: "--cfg madsim --cfg tracing_unstable"
      - name: Save rust cache
        id: target-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
