[workspace]
resolver = "2"
members = [
    "crates/concepts",
    "crates/db-sqlite",
    "crates/db",
    "crates/executor",
    "crates/testing/cargo-component-builder",
    "crates/testing/db-tests-common",
    "crates/testing/test-programs/fibo/activity",
    "crates/testing/test-programs/fibo/activity/builder",
    "crates/testing/test-programs/fibo/workflow",
    "crates/testing/test-programs/fibo/workflow/builder",
    "crates/testing/test-programs/http/activity",
    "crates/testing/test-programs/http/activity/builder",
    "crates/testing/test-programs/http/workflow",
    "crates/testing/test-programs/http/workflow/builder",
    "crates/testing/test-programs/patch/activity-broken",
    "crates/testing/test-programs/patch/activity-broken/builder",
    "crates/testing/test-programs/patch/activity-fixed",
    "crates/testing/test-programs/patch/activity-fixed/builder",
    "crates/testing/test-programs/patch/workflow",
    "crates/testing/test-programs/patch/workflow/builder",
    "crates/testing/test-programs/sleep/activity",
    "crates/testing/test-programs/sleep/activity/builder",
    "crates/testing/test-programs/sleep/workflow",
    "crates/testing/test-programs/sleep/workflow/builder",
    "crates/testing/test-utils",
    "crates/utils",
    "crates/val-json",
    "crates/wasm-workers",
]

[workspace.package]
version = "0.1.0"
authors = ["Project Developers"]
edition = "2021"
rust-version = "1.77.0"

[workspace.dependencies]
cargo-component-builder.path = "crates/testing/cargo-component-builder"
concepts.path = "crates/concepts"
db.path = "crates/db"
db-tests-common.path = "crates/testing/db-tests-common"
db-sqlite.path = "crates/db-sqlite"
executor.path = "crates/executor/"
test-programs-fibo-activity-builder.path = "crates/testing/test-programs/fibo/activity/builder"
test-programs-fibo-workflow-builder.path = "crates/testing/test-programs/fibo/workflow/builder"
test-programs-http-get-activity-builder.path = "crates/testing/test-programs/http/activity/builder"
test-programs-http-get-workflow-builder.path = "crates/testing/test-programs/http/workflow/builder"
test-programs-patch-activity-broken-builder.path = "crates/testing/test-programs/patch/activity-broken/builder"
test-programs-patch-activity-fixed-builder.path = "crates/testing/test-programs/patch/activity-fixed/builder"
test-programs-patch-workflow-builder.path = "crates/testing/test-programs/patch/workflow/builder"
test-programs-sleep-activity-builder.path = "crates/testing/test-programs/sleep/activity/builder"
test-programs-sleep-workflow-builder.path = "crates/testing/test-programs/sleep/workflow/builder"
test-utils.path = "crates/testing/test-utils/"
utils.path = "crates/utils/"
val-json.path = "crates/val-json"

anyhow = { version = "1.0", features = ["backtrace"] }
arbitrary = { version = "1.3.2", features = ["derive"] }
assert_matches = "1.5.0"
async-channel = "2.1.1"
async-sqlite = { version = "0.2.2", features = [
    "serde_json",
    "chrono",
    "tracing",
] }
async-trait = "0.1"
bitflags = "2.4.2"
cargo_metadata = "0.18"
cfg-if = "1.0.0"
chrono = { version = "0.4.34", features = ["arbitrary", "serde"] }
criterion = "0.5"
derivative = "2.2.0"
derive_more = "0.99.17"
futures-util = "0.3.30"
getrandom = "=0.2.11" # For madsim patch
hashbrown = "0.14.3"
http-body-util = "0.1"
hyper = "1.1.0"
hyper-util = "0.1"
indexmap = "2.1"
itertools = "0.12.1"
lazy_static = "1.4"
madsim = "0.2.27"
rand = "0.8.5"
rusqlite = { version = "0.31.0" }
rstest = "0.18.2"
serde = { version = "1.0.193", features = ["derive"] }
serde_json = "1.0.108"
serde_with = "3.7.0"
strum = { version = "0.26.0", features = ["derive"] }
tempfile = "3.10.1"
thiserror = "1.0"
tokio = { version = "0.2", package = "madsim-tokio", features = [
    "sync",
    "rt",
    "time",
    "macros",
] }
tracing = { version = "0.1", features = ["log"] }
tracing-chrome = "0.7.1"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
ulid = { version = "1.1.0", features = ["serde"] }
valuable = { version = "0.1.0", features = ["derive"] }
wasmtime = { version = "19.0.1", default-features = false, features = [
    # remove "parallel-compilation"
    "component-model",
    "addr2line",
    "async",
    "cache",
    "component-model",
    "coredump",
    "cranelift",
    "debug-builtins",
    "demangle",
    "gc",
    "pooling-allocator",
    "profiling",
    "wat",
] }
wasmtime-wasi = "19.0"
wasmtime-wasi-http = "19.0"
wast = "201.0.0"
wiremock = "0.6"
wit-bindgen-rt = "0.22.0"
wit-component = "0.201.0"
wit-parser = "0.201.0"

[patch.crates-io]
async-sqlite = { git = "https://github.com/tomasol/async-sqlite", rev = "11d12d46159cdc36dbda12a5efa381c0d2bf85a8" } # rusqlite 0.31.0, sqlite 3.45
getrandom = { git = "https://github.com/madsim-rs/getrandom.git", rev = "e79a7aecbcf8a43a802d30742667b77d75c613bd" } # madsim

[workspace.lints]
# lower the priority to allow overriding later
clippy.all = { level = "deny", priority = -1 }
# lower the priority to allow overriding later
clippy.dbg_macro = "deny"
# lower the priority to allow overriding later
clippy.pedantic = { level = "deny", priority = -1 }
# lower the priority to allow overriding later
clippy.explicit_deref_methods = "allow" # Lots of false positives.
# lower the priority to allow overriding later
clippy.missing_errors_doc = "allow" # Allow missing docs for now
# lower the priority to allow overriding later
clippy.missing_panics_doc = "allow" # Allow missing docs for now
# lower the priority to allow overriding later
clippy.trivially_copy_pass_by_ref = "allow" # Lots of false positives.

clippy.module_name_repetitions = "allow"

rust.unknown_lints = "deny"

[profile.release]
debug-assertions = true
overflow-checks = true
lto = true
